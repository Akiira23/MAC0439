// Escolhi os ID's pra ilustrar melhor a pesquisa

// 1 - sugerindo amizades
// se participa do chat, amigo de um amigo, 
// participa de uma mesma organização 
match (u:User {id: 8}), (outro:User)
where outro.id <> 8
and not exists((u) -[:IS_FRIEND]-> (outro))
and (exists((u) -[:IS_IN]-> (:Chat) <-[:IS_IN]- (outro))
	or exists((u) -[:PARTICIPATES]-> (:Organization) <-[:PARTICIPATES]- (outro))
    or exists((u) -[:IS_FRIEND]-> (:User) -[:IS_FRIEND *]- (outro)))
return outro

// 2 - mensagens num chat e os autores
match (c:Chat {id: 2}) <-[:SENT_IN]- (msg:Message) <-[:SENDS]- (author:User)
return c, msg, author

// 3 - chats em que participo
match (c:Chat) <-[:IS_IN]- (eu:User {id: 1})
return eu, c

// 4 - organizações em que participo
match (org:Organization) <-[:PARTICIPATES]- (eu:User {id: 1})
return eu, org